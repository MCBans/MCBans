name: Build and Release Plugin

on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: chmod +x ./gradlew && ./gradlew build

      - name: Extract version from build.gradle
        id: gradle_version
        run: |
          VERSION=$(grep -m 1 "version" build.gradle | awk -F "'" '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Create JAR file
        run: |
          mkdir -p build/libs
          jar -cf build/libs/mcbans-${{ env.VERSION }}.jar -C build/classes/java/main .
          echo "Created JAR file: build/libs/mcbans-${{ env.VERSION }}.jar"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/mcbans-${{ env.VERSION }}.jar
          asset_name: mcbans-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive
